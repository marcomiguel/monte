<?php
namespace Rpp\Services\Publish;
use Rpp\Repositorio\Builder\SearchPatternBuilder;
use Rpp\Repositorio\Builder\Search\Pattern\Nota;
use \Shared\Cache;
class Noticia extends \Phalcon\Mvc\User\Component{
  private $nota;
  private $nid;
  private $patternBuilder;
  public function __construct($nid)
  {
  	 $this->nid = (int) $nid;
     $this->patternBuilder = new SearchPatternBuilder(new Nota());
  }
  
  public function builder()
  {

    $Pattern = $this->patternBuilder->addFilter(array('_id'=>$this->nid))->build();
    $this->nota = $Pattern->load(); 

  	foreach ($this->nota as $key => $value) {
  		Cache::request()->save(
                           Cache::get_conf()->cache_prefix->nota.$this->nid.'.'.$key,
                           $value,
                           Cache::get_conf()->cache_time->nota
  			);
      
  	}

 
    $Pattern = $this->patternBuilder->addFilter(array('_id'=>$this->nid))->addFields(explode(",",Cache::get_conf()->node->fields))->build();
   
        
    Cache::request()->save(
                        Cache::get_conf()->cache_prefix->nota.$this->nid.'.node',
                        $Pattern->load(),
                        Cache::get_conf()->cache_time->nota
                      );
    
   \Rpp\Services\Get\Content::$content=null;
   \Rpp\Services\Get\Flow::$flow=null; 
   $home = new \Rpp\Services\Publish\Dominio\Home();
   $home->make();
   $this->view->partial('partials/portada/flujo/home');
   $seccion = new \Rpp\Services\Publish\Dominio\Seccion();
   foreach ($this->nota->categoria_slug as $seccion_slug){
      $seccion_slug = explode("/",$seccion_slug);
      unset($seccion_slug[0]);
      if(count($seccion_slug)>0)
      {
        for ($i=count($seccion_slug); $i > 0 ; $i--) { 
          $seccion->set_slug(implode('/',$seccion_slug));
          $seccion->make();
          $this->view->partial('partials/portada/flujo/seccion',array('slug' => implode('/',$seccion_slug)));
          unset($seccion_slug[$i]);
        }
      }
    }
    
    $tag = new \Rpp\Services\Publish\Dominio\Tag();
    foreach ($this->nota->tags as $tag_slug) {
       $tag->set_slug($tag_slug['slug']);
       $tag->make();
    }
  }
}
