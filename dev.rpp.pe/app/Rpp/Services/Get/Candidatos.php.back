<?php
namespace Rpp\Services\Get;
use \Rpp\Repositorio\Builder\SearchPatternBuilder;
use \Shared\Cache;
class Candidatos
{
  private static $pattern_builder;
  public static $pattern;
  public static $cache ;
  public static $listado;
  public static $candidato;
  public static function get_repositorio()
  {
    if(empty(static::$pattern_builder)) return static::$pattern_builder =  new SearchPatternBuilder( new \Rpp\Repositorio\Builder\Search\Pattern\Candidatos() );
    return static::$pattern_builder;
  }

  public static function get_pattern()
  {
  if(empty(static::$pattern)) static::$pattern =  static::get_repositorio()->build();
  return static::$pattern;
  }

  public static function listado()
  {
    //if(empty(static::$listado)) static::$listado = Cache::request()->get('elecciones.candidatos');
    //else return static::$listado;

    if(Cache::request()->exists('elecciones.candidatos'))return static::$listado;
    else
    {
      static::$listado = @static::get_pattern()->load();
      if(empty(static::$listado)) static::$listado = null ;

      /*Cache::request()->save(
                          'elecciones.candidatos',
                           static::$listado ,
                           60*60*24*7*30
                          );*/
    }
    return static::$listado;
  }

  public static function candidato($id)
  {
    if(empty(static::$candidato[$id])) static::$candidato[$id] = Cache::request()->get('elecciones.candidato.'.$id);
    else return static::$candidato[$id];

    if(Cache::request()->exists('elecciones.candidato.'.$id))return static::$candidato[$id];
    else
    {
      static::$candidato[$id] = @static::get_pattern()->set_filter(array("_id"=>(int)$id))->load();
      if(empty(static::$candidato[$id])) static::$candidato[$id] = null ;

      /*Cache::request()->save(
                          'elecciones.candidato.'.$id,
                           static::$candidato[$id],
                           60*60*24*7*30
                          );*/
    }
    return static::$candidato[$id];
  }

}